name: Build
on: [push, pull_request, workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - run: |
         echo "Running on: ${{github.ref}}"
    
      - name: Run OX Security Scan to check for vulnerabilities
        with:
          ox_api_key: ${{ secrets.OX_API_KEY }}
        uses: oxsecurity/ox-security-scan@main
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - run: |
         echo "ISSUE TITLE: ${{github.event.issue.title}}"
         echo "PULLBODY: ${{ github.event.pull_request.body }}"
      - name: Mitigation with env
        env:
           TITLE: ${{github.event.issue.title}}
           PULLBODY: ${{ github.event.pull_request.body }}

        run: |
         echo "ISSUE TITLE: $TITLE"
         echo "PULLBODY: $PULL BODY"
         
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Inspect builder
        run: |
          echo "ISSUE TITLE: ${{github.event.issue.title}}"
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Build the image multiplatform
        run: docker buildx build --output "type=image,push=false" --platform linux/amd64 --tag oxdemo/docker-service:latest --file ./Dockerfile .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: oxdemo/docker-service:latest
          platforms: linux/amd64

